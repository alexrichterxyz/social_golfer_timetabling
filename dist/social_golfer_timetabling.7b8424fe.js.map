{"mappings":"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","sources":["<anon>","src/js/index.js","../../../../opt/homebrew/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/runtime-de0e6288b2a937f0.js","../../../../opt/homebrew/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js"],"sourcesContent":["const $8f6a480bb40b134f$var$config = {\n    zones: {},\n    weeks: 12,\n    roles: [\n        ''\n    ]\n};\nconst $8f6a480bb40b134f$var$rolesElement = document.getElementById('roles');\nconst $8f6a480bb40b134f$var$progressElement = document.getElementById('progress');\nconst $8f6a480bb40b134f$var$submitElement = document.getElementById('submit');\nconst $8f6a480bb40b134f$var$csvElement = document.getElementById('csv');\nconst $8f6a480bb40b134f$var$weeksElement = document.getElementById('weeks');\nconst $8f6a480bb40b134f$var$zoneDataElement = document.getElementById('zone-data');\nconst $8f6a480bb40b134f$var$errorElement = document.getElementById('error');\nlet $8f6a480bb40b134f$var$isReportingError = false;\nlet $8f6a480bb40b134f$var$progress = 0.0;\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    $8f6a480bb40b134f$var$csvElement.value = '';\n    $8f6a480bb40b134f$var$weeksElement.value = $8f6a480bb40b134f$var$config.weeks;\n    $8f6a480bb40b134f$var$rolesElement.value = $8f6a480bb40b134f$var$config.roles.join(', ');\n    $8f6a480bb40b134f$var$setProgress($8f6a480bb40b134f$var$progress);\n});\nfunction $8f6a480bb40b134f$var$reportError(message) {\n    $8f6a480bb40b134f$var$isReportingError = true;\n    $8f6a480bb40b134f$var$submitElement.disabled = true;\n    $8f6a480bb40b134f$var$errorElement.innerText = message;\n}\nfunction $8f6a480bb40b134f$var$resetError() {\n    if ($8f6a480bb40b134f$var$isReportingError) {\n        $8f6a480bb40b134f$var$errorElement.innerText = '';\n        $8f6a480bb40b134f$var$submitElement.disabled = false;\n    }\n    $8f6a480bb40b134f$var$isReportingError = false;\n}\nfunction $8f6a480bb40b134f$var$disableInputs() {\n    document.querySelectorAll('input').forEach((input)=>input.disabled = true);\n}\nfunction $8f6a480bb40b134f$var$enableInputs() {\n    document.querySelectorAll('input').forEach((input)=>input.disabled = false);\n}\n$8f6a480bb40b134f$var$rolesElement.oninput = (event)=>{\n    $8f6a480bb40b134f$var$config.roles = event.target.value.split(',').map((e)=>e.trim());\n};\n$8f6a480bb40b134f$var$weeksElement.oninput = (event)=>{\n    const weeks = parseInt(event.target.value);\n    if (!Number.isInteger(weeks) || weeks < 2) {\n        $8f6a480bb40b134f$var$reportError('Number of weeks must be an integer greater than 2.');\n        return;\n    }\n    $8f6a480bb40b134f$var$config.weeks = weeks;\n    $8f6a480bb40b134f$var$resetError();\n};\n$8f6a480bb40b134f$var$csvElement.onchange = (event)=>{\n    $8f6a480bb40b134f$var$config.zones = {};\n    const file = event.target.files[0];\n    if (!file) {\n        $8f6a480bb40b134f$var$reportError('Invalid CSV file.');\n        return;\n    }\n    const reader = new FileReader();\n    function getZoneInputAndLabel(id, label, zone, oninput) {\n        const labelElement = document.createElement('label');\n        labelElement.setAttribute('for', id);\n        labelElement.textContent = label;\n        const inputElement = document.createElement('input');\n        inputElement.id = id;\n        inputElement.type = 'number';\n        inputElement.step = '1';\n        inputElement.value = '2';\n        inputElement.min = '2';\n        inputElement.oninput = oninput;\n        return {\n            input: inputElement,\n            label: labelElement\n        };\n    }\n    function getZoneDataListItem(index, zone) {\n        const li = document.createElement('li');\n        const groupElements = getZoneInputAndLabel(`groups-${2 * index}`, 'Number of groups', zone, (event)=>{\n            const groups = parseInt(event.target.value);\n            if (!Number.isInteger(groups)) {\n                $8f6a480bb40b134f$var$reportError('Invalid number of groups');\n                return;\n            }\n            $8f6a480bb40b134f$var$config.zones[zone].groups = groups;\n            $8f6a480bb40b134f$var$resetError();\n        });\n        const p = document.createElement('p');\n        p.innerText = `${zone} (${$8f6a480bb40b134f$var$config.zones[zone].people.length} people)`;\n        li.appendChild(p);\n        li.appendChild(groupElements.label);\n        li.appendChild(groupElements.input);\n        const tableElements = getZoneInputAndLabel(`tables-${2 * index + 1}`, 'Number of tables', zone, (event)=>{\n            const tables = parseInt(event.target.value);\n            if (!Number.isInteger(tables)) {\n                $8f6a480bb40b134f$var$reportError('Invalid number of tables');\n                return;\n            }\n            $8f6a480bb40b134f$var$config.zones[zone].tables = tables;\n            $8f6a480bb40b134f$var$resetError();\n        });\n        li.appendChild(tableElements.label);\n        li.appendChild(tableElements.input);\n        return li;\n    }\n    reader.onload = (e)=>{\n        const csv = e.target.result;\n        // this may not work if there are escaped commas or linebreaks\n        const rows = csv.split('\\n');\n        if (rows.length < 2) $8f6a480bb40b134f$var$reportError('CSV requires at least 2 rows.');\n        const colNames = rows[0].split(',').map((e)=>e.trim());\n        const personIndex = colNames.indexOf('person');\n        if (personIndex === -1) $8f6a480bb40b134f$var$reportError('Required column `person` is missing.');\n        const zoneIndex = colNames.indexOf('zone');\n        const minValueIndex = Math.max(personIndex, zoneIndex);\n        for (const row of rows.slice(1)){\n            // sometimes the last row is empty\n            if (row == '') continue;\n            const values = row.split(',').map((e)=>e.trim());\n            if (values.length <= minValueIndex) $8f6a480bb40b134f$var$reportError('Invalid CSV file.');\n            const zone = zoneIndex !== -1 ? values[zoneIndex] : '';\n            const person = values[personIndex];\n            if (!$8f6a480bb40b134f$var$config.zones.hasOwnProperty(zone)) $8f6a480bb40b134f$var$config.zones[zone] = {\n                groups: 2,\n                tables: 2,\n                people: [\n                    person\n                ]\n            };\n            else $8f6a480bb40b134f$var$config.zones[zone].people.push(person);\n        }\n        Object.keys($8f6a480bb40b134f$var$config.zones).forEach((zone, index)=>{\n            $8f6a480bb40b134f$var$zoneDataElement.appendChild(getZoneDataListItem(index, zone));\n        });\n    };\n    $8f6a480bb40b134f$var$zoneDataElement.innerHTML = '';\n    reader.readAsText(file);\n};\nfunction $8f6a480bb40b134f$var$downloadCSV(data) {\n    const columns = Object.keys(data);\n    const rowCount = data[columns[0]].length;\n    const rows = [\n        columns\n    ];\n    for(let rowIdx = 0; rowIdx < rowCount; rowIdx++){\n        const row = [];\n        for (const col of columns)row.push(data[col][rowIdx]);\n        rows.push(row);\n    }\n    const csv = rows.map((r)=>r.join(',')).join('\\n');\n    const blob = new Blob([\n        csv\n    ], {\n        type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    window.open(url, '_blank');\n}\nfunction $8f6a480bb40b134f$var$setProgress(x) {\n    $8f6a480bb40b134f$var$progress = x;\n    $8f6a480bb40b134f$var$progressElement.style.width = `${$8f6a480bb40b134f$var$progress * 100}%`;\n}\nvar $5919ec7799fe76e2$exports = {};\nvar $387443c88cd42edd$exports = {};\n\"use strict\";\n$387443c88cd42edd$exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: 'application/javascript'\n        }));\n    }\n};\n\n\nlet $5919ec7799fe76e2$var$url = new URL(import.meta.resolve(\"2wF6P\"));\n$5919ec7799fe76e2$exports = $387443c88cd42edd$exports($5919ec7799fe76e2$var$url.toString(), $5919ec7799fe76e2$var$url.origin, true);\n\n\n$8f6a480bb40b134f$var$submitElement.onclick = ()=>{\n    // users may change config as the optimization is ongoing\n    $8f6a480bb40b134f$var$setProgress(0.0);\n    const submissionConfig = structuredClone($8f6a480bb40b134f$var$config);\n    const numZones = Object.keys(submissionConfig.zones).length;\n    const workers = {};\n    const workerProgress = {};\n    const result = {\n        zone: [],\n        week: [],\n        person: [],\n        table: [],\n        group: [],\n        role: []\n    };\n    for (const [zone, zoneInfo] of Object.entries(submissionConfig.zones)){\n        const worker = new Worker($5919ec7799fe76e2$exports);\n        worker.postMessage({\n            operation: 'optimize',\n            payload: {\n                people: zoneInfo.people,\n                tables: zoneInfo.tables,\n                groups: zoneInfo.groups,\n                weeks: submissionConfig.weeks,\n                roles: submissionConfig.roles\n            }\n        });\n        worker.onmessage = (e)=>{\n            const operation = e.data.operation;\n            const payload = e.data.payload;\n            switch(operation){\n                case 'result':\n                    {\n                        const n = payload.person.length;\n                        result.zone.push(...Array(n).fill(zone));\n                        result.person.push(...payload.person);\n                        result.table.push(...payload.table);\n                        result.week.push(...payload.week);\n                        result.group.push(...payload.group);\n                        result.role.push(...payload.role);\n                        worker.terminate();\n                        delete workers[zone];\n                        if (Object.keys(workers).length === 0) {\n                            $8f6a480bb40b134f$var$downloadCSV(result);\n                            $8f6a480bb40b134f$var$setProgress(0.0);\n                        }\n                        break;\n                    }\n                case 'progress':\n                    workerProgress[zone] = payload;\n                    $8f6a480bb40b134f$var$setProgress(Object.values(workerProgress).reduce((acc, val)=>acc + val, 0) / numZones);\n                    break;\n                case 'log':\n                    console.log(payload);\n                    break;\n                default:\n                    break;\n            }\n        };\n        workers[zone] = worker;\n    }\n};\n\n\n//# sourceMappingURL=social_golfer_timetabling.7b8424fe.js.map\n","const config = {\n    zones: {},\n    weeks: 12,\n    roles: ['']\n};\n\nconst rolesElement = document.getElementById('roles');\nconst progressElement = document.getElementById('progress');\nconst submitElement = document.getElementById('submit');\nconst csvElement = document.getElementById('csv');\nconst weeksElement = document.getElementById('weeks');\nconst zoneDataElement = document.getElementById('zone-data');\nconst errorElement = document.getElementById('error');\nlet isReportingError = false;\nlet progress = 0.0;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    csvElement.value = '';\n    weeksElement.value = config.weeks;\n    rolesElement.value = config.roles.join(', ');\n    setProgress(progress);\n});\n\nfunction reportError(message) {\n    isReportingError = true;\n    submitElement.disabled = true;\n    errorElement.innerText = message;\n}\n\nfunction resetError() {\n    if(isReportingError) {\n        errorElement.innerText = '';\n        submitElement.disabled = false;\n    }\n\n    isReportingError = false;\n}\n\nfunction disableInputs() {\n    document.querySelectorAll('input').forEach(input => input.disabled = true);\n}\n\nfunction enableInputs() {\n    document.querySelectorAll('input').forEach(input => input.disabled = false);\n}\n\nrolesElement.oninput = (event) => {\n    config.roles = event.target.value.split(',').map(e => e.trim());\n}\n\nweeksElement.oninput = (event) => {\n    const weeks = parseInt(event.target.value);\n    \n    if(!Number.isInteger(weeks) || weeks < 2) {\n        reportError('Number of weeks must be an integer greater than 2.');\n        return;\n    }\n\n    config.weeks = weeks;\n    resetError();\n}\n\n\ncsvElement.onchange = (event) => {\n    config.zones = {};\n    const file = event.target.files[0];\n    if (!file) {\n        reportError('Invalid CSV file.')\n        return;\n    }\n\n    const reader = new FileReader();\n\n    function getZoneInputAndLabel(id, label, zone, oninput) {\n        const labelElement = document.createElement('label');\n        labelElement.setAttribute('for', id);\n        labelElement.textContent = label;\n\n        const inputElement = document.createElement('input');\n        inputElement.id = id;\n        inputElement.type = 'number';\n        inputElement.step = '1';\n        inputElement.value = '2';\n        inputElement.min = '2';\n        inputElement.oninput = oninput;\n\n        return {input: inputElement, label: labelElement};\n    }\n\n    function getZoneDataListItem(index, zone) {\n        const li = document.createElement('li');\n        const groupElements = getZoneInputAndLabel(\n            `groups-${2*index}`,\n            'Number of groups',\n            zone,\n            (event) => {\n                const groups = parseInt(event.target.value);\n\n                if(!Number.isInteger(groups)) {\n                    reportError('Invalid number of groups');\n                    return;\n                }   \n\n                config.zones[zone].groups = groups;\n                resetError();\n            }\n        );\n        \n        const p = document.createElement('p');\n        p.innerText = `${zone} (${config.zones[zone].people.length} people)`\n        li.appendChild(p);\n        li.appendChild(groupElements.label);\n        li.appendChild(groupElements.input);\n\n        const tableElements = getZoneInputAndLabel(\n            `tables-${2*index+1}`,\n            'Number of tables',\n            zone,\n            (event) => {\n                const tables = parseInt(event.target.value);\n\n                if(!Number.isInteger(tables)) {\n                    reportError('Invalid number of tables');\n                    return;\n                }   \n                \n                config.zones[zone].tables = tables;\n                resetError();\n            }\n        );\n        li.appendChild(tableElements.label);\n        li.appendChild(tableElements.input);\n\n        return li;        \n    }\n    \n    reader.onload = (e) => {\n        const csv = e.target.result;\n        // this may not work if there are escaped commas or linebreaks\n        const rows = csv.split('\\n');\n\n        if(rows.length < 2) {\n            reportError('CSV requires at least 2 rows.');\n        }\n\n        const colNames = rows[0].split(',').map(e => e.trim());\n        const personIndex = colNames.indexOf('person');\n\n        if(personIndex === -1) {\n            reportError('Required column `person` is missing.');\n        }\n\n        const zoneIndex = colNames.indexOf('zone');\n        const minValueIndex = Math.max(personIndex, zoneIndex);\n\n        for(const row of rows.slice(1)) {\n            // sometimes the last row is empty\n            if(row == '') {\n                continue;\n            }\n\n            const values = row.split(',').map(e => e.trim());\n\n            if(values.length <= minValueIndex) {\n                reportError('Invalid CSV file.');\n            }\n\n            const zone = zoneIndex !== -1 ? values[zoneIndex] : '';\n            const person = values[personIndex];\n\n            if(!config.zones.hasOwnProperty(zone)) {\n                config.zones[zone] = {\n                    groups: 2,\n                    tables: 2,\n                    people: [person]\n                };\n            } else {\n                config.zones[zone].people.push(person);\n            }\n        }\n\n        Object.keys(config.zones).forEach((zone, index) => {\n            zoneDataElement.appendChild(getZoneDataListItem(index, zone));\n        });\n    }\n    \n    zoneDataElement.innerHTML = '';\n    reader.readAsText(file);\n}\n\nfunction downloadCSV(data) {\n    const columns = Object.keys(data);\n    const rowCount = data[columns[0]].length;\n    const rows = [columns];\n    for(let rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n        const row = [];\n\n        for(const col of columns) {\n            row.push(data[col][rowIdx]);\n        }\n\n        rows.push(row);\n    }\n\n    const csv = rows.map(r => r.join(',')).join('\\n');\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    window.open(url, '_blank');\n}\n\nfunction setProgress(x) {\n    progress = x;\n    progressElement.style.width = `${progress * 100}%`;\n}\n\nsubmitElement.onclick = () => {\n    // users may change config as the optimization is ongoing\n    setProgress(0.0);\n    const submissionConfig = structuredClone(config);\n    const numZones = Object.keys(submissionConfig.zones).length\n\n    const workers = {};\n    const workerProgress = {};\n    const result = {\n        zone: [],\n        week: [],\n        person: [],\n        table: [],\n        group: [],\n        role: []\n    };\n\n    for(const [zone, zoneInfo] of Object.entries(submissionConfig.zones)) {\n        const worker = new Worker(new URL('./wasm-worker.js', import.meta.url), {\n            type: 'module'\n        });\n\n        worker.postMessage({\n            operation: 'optimize',\n            payload: {\n                people: zoneInfo.people,\n                tables: zoneInfo.tables,\n                groups: zoneInfo.groups,\n                weeks: submissionConfig.weeks,\n                roles: submissionConfig.roles\n            }\n        });\n\n        worker.onmessage = (e) => {\n            const operation = e.data.operation;\n            const payload = e.data.payload;\n\n            switch(operation) {\n                case 'result': {\n                    const n = payload.person.length\n                    result.zone.push(...Array(n).fill(zone));\n                    result.person.push(...payload.person);\n                    result.table.push(...payload.table);\n                    result.week.push(...payload.week);\n                    result.group.push(...payload.group);\n                    result.role.push(...payload.role);\n                    worker.terminate();\n                    delete workers[zone];\n\n                    if(Object.keys(workers).length === 0) {\n                        downloadCSV(result);\n                        setProgress(0.0);\n                    }\n\n                    break;\n                }\n                case 'progress': {\n                    workerProgress[zone] = payload;\n                    setProgress(Object.values(workerProgress).reduce(\n                        (acc, val) => acc + val,\n                        0\n                    ) / numZones)\n                    break;\n                }\n                case 'log': {\n                    console.log(payload)\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n\n        workers[zone] = worker;\n    }\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new URL(__parcel__import__.meta.resolve(\"2wF6P\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};"],"names":["$8f6a480bb40b134f$var$config","zones","weeks","roles","$8f6a480bb40b134f$var$rolesElement","document","getElementById","$8f6a480bb40b134f$var$progressElement","$8f6a480bb40b134f$var$submitElement","$8f6a480bb40b134f$var$csvElement","$8f6a480bb40b134f$var$weeksElement","$8f6a480bb40b134f$var$zoneDataElement","$8f6a480bb40b134f$var$errorElement","$8f6a480bb40b134f$var$isReportingError","$8f6a480bb40b134f$var$progress","$8f6a480bb40b134f$var$reportError","message","disabled","innerText","$8f6a480bb40b134f$var$resetError","$8f6a480bb40b134f$var$setProgress","x","style","width","addEventListener","value","join","oninput","event","target","split","map","e","trim","parseInt","Number","isInteger","onchange","file","files","reader","FileReader","getZoneInputAndLabel","id","label","zone","labelElement","createElement","setAttribute","textContent","inputElement","type","step","min","input","onload","rows","csv","result","length","colNames","personIndex","indexOf","zoneIndex","minValueIndex","Math","max","row","slice","values","person","hasOwnProperty","people","push","groups","tables","Object","keys","forEach","index","appendChild","getZoneDataListItem","li","groupElements","p","tableElements","innerHTML","readAsText","$5919ec7799fe76e2$exports","$387443c88cd42edd$exports","workerUrl","origin","isESM","self","location","source","JSON","stringify","URL","createObjectURL","Blob","$5919ec7799fe76e2$var$url","resolve","toString","onclick","submissionConfig","structuredClone","numZones","workers","workerProgress","week","table","group","role","zoneInfo","entries","worker","Worker","postMessage","operation","payload","onmessage","data","n","Array","fill","terminate","$8f6a480bb40b134f$var$downloadCSV","columns","rowCount","rowIdx","col","blob","r","url","window","open","reduce","acc","val","console","log"],"version":3,"file":"social_golfer_timetabling.7b8424fe.js.map"}